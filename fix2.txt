		Laboration 1 Javaverktyg och byggmiljöer

1.	Skapa ett git repo med en branch kallad main.
1.1.	mkdir GitExercises
1.2.	cd GitExercises
1.3.	git init
1.4.	git checkout -b main

2.	Skapa en fil som heter README.md och lägg till 3 rader med djur i filen.
2.1.	echo "duck" > README.md
2.2.	echo "moose" >> README.md 
2.3.	echo "cat" >> README.md

3.	Gör en commit med message: Initial commit
3.1.	git add README.md
3.2.	git commit -m "Initial commit"
3.3.	git status

4.	Skapa en ny branch med namnet feature1 och växla över till den.
4.1.	git checkout -b feature1
4.2.	git branch

5.	Lägg till dog sist i filen som ett fjärde djur och byt ut moose mot mouse samt gör en commit med lämpligt message.
5.1.	sed -i 's/moose/mouse/g' README.md 
5.2.	echo "dog" >> README.md
5.3.	git diff
5.4.	git add README.md
5.5.	git commit -m "Add dog and replace moose with mouse"
5.6.	git log

6.	Växla tillbaka till main och ändra moose till mahmut och gör en commit.
6.1.	git checkout main 
6.2.	sed -i 's/moose/mahmut/g' README.md 
6.3.	git add README.md
6.4.	git commit -m "Change moose to mahmut"

7.	Merga nu feature1 grenen med main. Om du gjort rätt tidigare så bör det nu uppstå en merge conflict som behöver lösas och resultatet ska efter merge vara: duck mahmut mouse cat dog.
7.1.	git log --oneline --graph --all
7.2.	git merge feature1
7.3.	notepad README.md
7.4.	git add README.md
7.5.	git merge --continue 

8.	Skapa en lightweight tag med namnet: extinct som pekar på merge commiten.
8.1.	git log --oneline --graph --all
8.2.	git tag -a extinct 340a3ee
8.3.	git show extinct

9.	Använd nu lämpligt git kommando för att flytta main och HEAD tillbaka till föregående commit på main branchen. README filen ska nu endast innehålla duck mahmut cat
9.1.	git log --oneline --graph --all
9.2.	git checkout 0f04ce5

10.	Skapa en commit som gör så alla djurnamnen börjar med stor bokstav.
10.1.	notepad README.md
10.2.	git add README.md
10.3.	git commit -m "Fix uppercase"

11.	Skapa en ny feature2 gren men stanna kvar på main grenen.
11.1.	git checkout main
11.2.	git branch feature2

12.	Växla nu till feature2 och skapa två commits där första commiten lägger till en fil som heter fix1.txt och den andra commiten lägger till en fil som heter fix2.txt.
12.1.	git checkout feature2 
12.2.	echo > fix1.txt
12.3.	git add fix1.txt
12.4.	git commit -m "Add fix1.txt"
12.5.	echo > fix2.txt
12.6.	git add fix2.txt
12.7.	git commit -m "Add fix2.txt"

13.	Byt tillbaka till main branchen och se att filerna fix1 och fix2 försvunnit i vårt lokala filsystem.
13.1.	git checkout main
13.2.	ls

14.	Gör nu en cherry-pick på commiten som lägger till fix2.txt över till main grenen.
14.1.	git log --oneline --graph --all
14.2.	git cherry-pick bd12ffd

